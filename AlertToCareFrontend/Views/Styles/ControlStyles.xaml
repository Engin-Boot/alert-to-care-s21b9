<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:AlertToCareFrontend.ViewModels.Converters">
    <Style x:Key="BorderStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="3"/>

    </Style>

    <Style x:Key="HeaderStyle" TargetType="{x:Type TextBlock}">
        <!--<Setter Property="Background" Value="Gainsboro"/>-->
        <Setter Property="Foreground" Value="DimGray"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="FontFamily" Value="Ariel"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="FontWeight" Value="DemiBold"/>

    </Style>
    <Style x:Key="HeadingStyle" TargetType="{x:Type TextBlock}">
        <!--<Setter Property="Background" Value="Gainsboro"/>-->
        <Setter Property="Foreground" Value="DimGray"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontFamily" Value="Ariel"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="10"/>
    </Style>
    <Style x:Key="ContentStyle" TargetType="{x:Type TextBlock}">
        <!--<Setter Property="Background" Value="Gainsboro"/>-->
        <Setter Property="Foreground" Value="DimGray"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontFamily" Value="Ariel"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="10"/>
    </Style>
    <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="Ariel"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Background" Value="Blue"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                                CornerRadius="5"
                                BorderThickness="1"
                                Padding="5"
                                BorderBrush="#000">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HorizontalSeparatorStyle" TargetType="Separator">
        <Setter Property="Height" Value="15"/>
        <Setter Property="Background" Value="DarkGray"/>
    </Style>
    <Style x:Key="VerticalSeparatorStyle" TargetType="Separator">
        <Setter Property="Height" Value="15"/>
        <Setter Property="Background" Value="DarkGray"/>
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <RotateTransform Angle="90"/>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DropdownStyle" TargetType="ComboBox">
        <Setter Property="Margin" Value="12"/>
    </Style>
    <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Margin" Value="5"/>
    </Style>
    <Style x:Key="TextBoxStyle" TargetType="TextBox">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#F3F3F3" Offset="0"/>
        <GradientStop Color="#EBEBEB" Offset="0.5"/>
        <GradientStop Color="#DDDDDD" Offset="0.5"/>
        <GradientStop Color="#CDCDCD" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
    <Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <StackPanel Orientation="Horizontal">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <Border x:Name="on" Width="25" Height="25" Background="LightGray" CornerRadius="2,0,0,4" Margin="10,0,0,0">
                            <TextBlock x:Name="onText" Text="On" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <Border x:Name="off" Width="25" Height="25" Background="LightGray" CornerRadius="0,2,4,0">
                            <TextBlock x:Name="offText" Text="Off" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="on" Property="Background" Value="red"/>
                            <Setter TargetName="onText" Property="Foreground" Value="gray"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="off" Property="Background" Value="green"/>
                            <Setter TargetName="offText" Property="Foreground" Value="gray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <converters:EnableComboBoxValueConverter x:Key="cbvc"/>
    <converters:ChangeBpAlarmStatusConverter x:Key="bpc"/>
    <converters:ChangeSpo2AlarmStatusConverter x:Key="spo2c"/>
    <converters:ChangeRespRateAlarmStatusConverter x:Key="respc"/>
</ResourceDictionary>